# Reading C:/modeltech64_10.0c/tcl/vsim/pref.tcl 
# //  ModelSim SE-64 10.0c Jul 21 2011 
# //
# //  Copyright 1991-2011 Mentor Graphics Corporation
# //  All Rights Reserved.
# //
# //  THIS WORK CONTAINS TRADE SECRET AND PROPRIETARY INFORMATION
# //  WHICH IS THE PROPERTY OF MENTOR GRAPHICS CORPORATION OR ITS
# //  LICENSORS AND IS SUBJECT TO LICENSE TERMS.
# //
# do {additioneur_tb.fdo} 
# ** Warning: (vlib-34) Library already exists at "work".
# Model Technology ModelSim SE-64 vcom 10.0c Compiler 2011.07 Jul 21 2011
# -- Loading package STANDARD
# -- Loading package TEXTIO
# -- Loading package std_logic_1164
# -- Loading package std_logic_arith
# -- Loading package STD_LOGIC_UNSIGNED
# -- Loading package VCOMPONENTS
# -- Compiling entity kcpsm3
# -- Compiling architecture low_level_definition of kcpsm3
# Model Technology ModelSim SE-64 vcom 10.0c Compiler 2011.07 Jul 21 2011
# -- Loading package STANDARD
# -- Loading package TEXTIO
# -- Loading package std_logic_1164
# -- Loading package std_logic_arith
# -- Loading package STD_LOGIC_UNSIGNED
# -- Loading package VCOMPONENTS
# -- Compiling entity program
# -- Compiling architecture low_level_definition of program
# Model Technology ModelSim SE-64 vcom 10.0c Compiler 2011.07 Jul 21 2011
# -- Loading package STANDARD
# -- Loading package TEXTIO
# -- Loading package std_logic_1164
# -- Loading package std_logic_arith
# -- Loading package STD_LOGIC_UNSIGNED
# -- Compiling entity registres
# -- Compiling architecture behaviour of registres
# Model Technology ModelSim SE-64 vcom 10.0c Compiler 2011.07 Jul 21 2011
# -- Loading package STANDARD
# -- Loading package TEXTIO
# -- Loading package std_logic_1164
# -- Loading package std_logic_arith
# -- Loading package STD_LOGIC_UNSIGNED
# -- Compiling entity interfaces
# -- Compiling architecture behaviour of interfaces
# Model Technology ModelSim SE-64 vcom 10.0c Compiler 2011.07 Jul 21 2011
# -- Loading package STANDARD
# -- Loading package TEXTIO
# -- Loading package std_logic_1164
# -- Loading package std_logic_arith
# -- Loading package STD_LOGIC_UNSIGNED
# -- Compiling entity additioneur_stimuli
# -- Compiling architecture behaviour of additioneur_stimuli
# Model Technology ModelSim SE-64 vcom 10.0c Compiler 2011.07 Jul 21 2011
# -- Loading package STANDARD
# -- Loading package TEXTIO
# -- Loading package std_logic_1164
# -- Loading package std_logic_arith
# -- Loading package STD_LOGIC_UNSIGNED
# -- Compiling entity additioneur
# -- Compiling architecture structure of additioneur
# Model Technology ModelSim SE-64 vcom 10.0c Compiler 2011.07 Jul 21 2011
# -- Loading package STANDARD
# -- Loading package TEXTIO
# -- Loading package std_logic_1164
# -- Loading package std_logic_arith
# -- Loading package STD_LOGIC_UNSIGNED
# -- Compiling entity additioneur_tb
# -- Compiling architecture behaviour of additioneur_tb
# vsim -lib work -voptargs=\"+acc\" -t 1ps work.additioneur_tb 
# Loading std.standard
# Loading std.textio(body)
# Loading ieee.std_logic_1164(body)
# Loading ieee.std_logic_arith(body)
# Loading ieee.std_logic_unsigned(body)
# Loading work.additioneur_tb(behaviour)#1
# Loading work.additioneur(structure)#1
# Loading work.interfaces(behaviour)#1
# Loading unisim.vcomponents
# Loading work.program(low_level_definition)#1
# Loading ieee.vital_timing(body)
# Loading ieee.vital_primitives(body)
# Loading unisim.vpkg(body)
# Loading unisim.ramb16_s18(ramb16_s18_v)#1
# Loading work.registres(behaviour)#1
# Loading work.kcpsm3(low_level_definition)#1
# Loading unisim.lut1(lut1_v)#1
# Loading unisim.fdr(fdr_v)#1
# Loading unisim.fds(fds_v)#1
# Loading unisim.lut4(lut4_v)#1
# Loading unisim.fd(fd_v)#1
# Loading unisim.fde(fde_v)#1
# Loading unisim.lut3(lut3_v)#1
# Loading unisim.fdre(fdre_v)#1
# Loading unisim.lut2(lut2_v)#1
# Loading unisim.muxcy(muxcy_v)#1
# Loading unisim.xorcy(xorcy_v)#1
# Loading unisim.inv(inv_v)#1
# Loading unisim.fdrse(fdrse_v)#1
# Loading unisim.ram16x1d(ram16x1d_v)#1
# Loading unisim.ram64x1s(ram64x1s_v)#1
# Loading unisim.muxf5(muxf5_v)#1
# Loading unisim.ram32x1s(ram32x1s_v)#1
# Loading work.additioneur_stimuli(behaviour)#1
# .main_pane.wave.interior.cs.body.pw.wf
# .main_pane.structure.interior.cs.body.struct
# .main_pane.objects.interior.cs.body.tree
# ** Note: Simulation started
#    Time: 0 ps  Iteration: 0  Instance: /additioneur_tb/stimuli
#  
restart
run -all
# ** Note: Simulation started
#    Time: 0 ps  Iteration: 0  Instance: /additioneur_tb/stimuli
add wave  \
sim:/additioneur_tb/dut/u0/address \
sim:/additioneur_tb/dut/u0/instruction \
sim:/additioneur_tb/dut/u0/port_id \
sim:/additioneur_tb/dut/u0/write_strobe \
sim:/additioneur_tb/dut/u0/out_port \
sim:/additioneur_tb/dut/u0/read_strobe \
sim:/additioneur_tb/dut/u0/in_port
restart
run -all
# ** Note: Simulation started
#    Time: 0 ps  Iteration: 0  Instance: /additioneur_tb/stimuli
add wave \
/additioneur_tb/dut/u0/simulation/kcpsm3_opcode \
/additioneur_tb/dut/u0/simulation/kcpsm3_status 
restart
run -all
# ** Note: Simulation started
#    Time: 0 ps  Iteration: 0  Instance: /additioneur_tb/stimuli
restart
run -all
# ** Note: Simulation started
#    Time: 0 ps  Iteration: 0  Instance: /additioneur_tb/stimuli
