--------------------------------------------------------------------------------
--
-- This VHDL file was generated by EASE/HDL 8.0 Revision 2 from HDL Works B.V.
--
-- Ease library  : design
-- HDL library   : design
-- Host name     : NE-EIN-138-00
-- User name     : yves.meyer
-- Time stamp    : Wed Dec 11 15:16:27 2013
--
-- Designed by   : Y.Meyer
-- Company       : Haute Ecole ARC
-- Project info  : Additionneur PicoBlaze
--
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
-- Object        : Entity design.additioneur_tb
-- Last modified : Wed Dec 07 13:36:40 2011.
--------------------------------------------------------------------------------



library ieee;
use ieee.std_logic_1164.all;
use ieee.std_logic_arith.all;
use ieee.std_logic_unsigned.all;

entity additioneur_tb is
end entity additioneur_tb;

--------------------------------------------------------------------------------
-- Object        : Architecture design.additioneur_tb.behaviour
-- Last modified : Wed Dec 07 13:36:40 2011.
--------------------------------------------------------------------------------

architecture behaviour of additioneur_tb is

  signal clk       : std_logic;
  signal reset_n   : std_logic;
  signal nombre1   : std_logic_vector(7 downto 0);
  signal nombre2   : std_logic_vector(7 downto 0);
  signal resultat  : std_logic_vector(7 downto 0);
  signal carry_out : std_logic;

  component additioneur
    port (
      carry_out : out    std_logic;
      clk       : in     std_logic;
      nombre1   : in     std_logic_vector(7 downto 0);
      nombre2   : in     std_logic_vector(7 downto 0);
      reset_n   : in     std_logic;
      resultat  : out    std_logic_vector(7 downto 0));
  end component additioneur;

  component additioneur_stimuli
    port (
      carry_out : in     std_logic;
      clk       : out    std_logic;
      nombre1   : out    std_logic_vector(7 downto 0);
      nombre2   : out    std_logic_vector(7 downto 0);
      reset_n   : out    std_logic;
      resultat  : in     std_logic_vector(7 downto 0));
  end component additioneur_stimuli;

begin

  dut: additioneur
    port map(
      carry_out => carry_out,
      clk       => clk,
      nombre1   => nombre1,
      nombre2   => nombre2,
      reset_n   => reset_n,
      resultat  => resultat);

  stimuli: additioneur_stimuli
    port map(
      carry_out => carry_out,
      clk       => clk,
      nombre1   => nombre1,
      nombre2   => nombre2,
      reset_n   => reset_n,
      resultat  => resultat);
end architecture behaviour ; -- of additioneur_tb

