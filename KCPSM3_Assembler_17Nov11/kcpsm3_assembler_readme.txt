------------------------------------------------------------------------------------------------
Notes for KCPSM3 Assembler v2.01
------------------------------------------------------------------------------------------------

Ken Chapman - Xilinx Ltd - 17th November 2011  

This is an assembler for the KCPSM3 PicoBlaze processor that is native to the Windows operating 
system. It is provided under the Xilinx Reference Design License Agreement of which a copy has 
been included with this package.

This version of the KCPSM3 Assembler is provided as a complement to the original DOS based 
assembler. It should process the vast majority of existing PSM code but some small modifications
may be required. If this is the case then it is due to the fact that this assembler supports 
additional syntax and expects code that would also be compatible with the KCPSM6 PicoBlaze 
processor which has now been released. 

The most likely thing that this assembler will reject is any label that could be confused with 
a hexadecimal value. For example, a label 'dac' would be rejected by this assembler as it is a 
12-bit hex value. The original DOS assembler only rejected labels that could be confused with 
hex values up to 3FF hex (1K program) but the new KCPSM6 supports programs up to 4K so requires 
the larger address range.

This KCPSM3 Assembler and the KCPSM6 Assembler also support decimal, binary and ASCII 
definitions of constant values. Please review the KCPSM6 documentation to learn more. 

Please note that KCPSM6 is the more capable PicoBlaze processor optimised for the Spartan-6, 
Virtex-6 and 7-Series devices. Therefore you should consider this KCPSM3 assembler as a 
stepping stone to the future in which you use KCPSM6 in your designs for the newer generations 
of silicon products.


------------------------------------------------------------------------------------------------
General Usage of KCPSM3
------------------------------------------------------------------------------------------------


The assembler is provided for the Windows operating system.

YOU MUST BE FAMILIAR WITH THE ORIGINAL DOS ASSEMBLER AND HAVE THE 'ROM_form' TEMPLATES FROM 
THE ORIGINAL PACKAGE BEFORE YOU CAN USE THIS VERSION.


Running the Assembler
---------------------

The name of the file to be assembled must have the '.psm' extension. The name can be 
any length but is strongly recommended that the name does not contain any spaces.

     e.g.   This_is_an_acceptable_name_for_a_PSM_file.psm


The KCPSM3 assembler can be used interactively simply by running it and then entering 
the name of the PSM file to be assembled when prompted to do so (the '.psm' extension 
is optional). The interactive mode is recommended when you are in the main code 
development phase of your work and repeatedly running the assembler.

Alternatively, the assembler can be invoked from the command line or from a batch file 
together with the name of the PSM file (the '.psm' extension is optional). You may 
optionally provide an alternative name to be given to the output files. When used, this 
name must not contain spaces and must not specify a file extension of any kind.

     e.g.   KCPSM3 <name>[.psm] [<alternative_name_for_output_files>]

In this case the assembler will start and immediately attempt to assemble your specified 
PSM file. If the assembly is successful the assembler will close automatically. This
is useful when running batch files which are then free to continue with other tasks that 
probably use the successful results of the assembly. This also means that you will only 
have a brief opportunity to observe the messages displayed in the window before it closes. 
If however, there are errors in your PSM file the window will remain open for you to 
review the message, make a correction and perform another iteration of the assembler 
without needing to abandon your batch file execution sequence which will be waiting 
until the assembler is successful.

Finally, a rather elegant way to invoke the assembler is to locate your PSM file in Windows
Explorer and then select, drag and drop the PSM file over 'KCPSM3.exe'. This is equivalent  
to entering 'KCPSM3 <name>.psm' at the command line but without typing anything. This scheme 
is particularly quick and easy to use if you first create a shortcut of 'KCPSM3.exe' and 
place it on your desk top. You can then drag and drop any PSM file over it and all the files 
generated by the assembler will be written to the same directory as your PSM file.  


Default Output Files
--------------------

When the assembly is successful the following files will be generated. All files are given 
the same name as the original PSM file unless an alternative name was specified on the 
command line in which case the LOG and HEX files will be assigned that name.

<name>.fmt - The original PSM file but perfectly formatted.
             Hint - Use this to replace your original file and make it look 
                    like you spent all day making things look this tidy!

<name>.log - The report on the assembly process in full detail. 

<name>.hex - The assembled op-codes as a list of hexadecimal values used by
             utility programs such as JTAG_Loader_6. The HEX file contains 
             4096 op-codes (a 4K program) but typical programs will only 
             use the first 1024 (a 1K program).


Generation of VHDL and Verilog Files
------------------------------------

To generate a VHDL and/or Verilog file then place the corresponding 'ROM_form.vhd' 
and/or 'ROM_form.v' program memory template file in the same directory as your PSM 
file and the KCPSM3 assembler will automatically generate a VHDL and/or Verilog file 
for each 'ROM_form' template that is found. The generated VHDL and/or Verilog file 
will be assigned the same name as the original PSM file unless an alternative name 
was specified on the command line.

  
     
------------------------------------------------------------------------------------------------
Advanced Techniques and Operation
------------------------------------------------------------------------------------------------

The following notes will generally apply when batch files invoke the KCPSM3 assembler and 
specify the file names in the command line. 

Although the assembler will attempt to provide useful feedback should there be any issues 
with the file name(s) specified on the command line (or in a batch file) it is generally 
expected that the command line is defined correctly and that the specified PSM file is 
available for the KCPSM3 assembler to read. 

If you specify an alternative name for the output files that is invalid a warning message 
will be generated but the assembly will continue, and if successful, result in the generation 
of output files with default names based on the name of the PSM file.

If the specified PSM file is not found by the assembler an error message will be generated 
and you will invited to provide the name of a PSM file that does exist. However, this will 
also mean that the files generated by the assembler will be given default names based on the 
name of the PSM file specified. 

Path Specifications
-------------------

Any specification of a file name can include a specification of a path to its location. This 
can be very useful but there are specific rules which should be understood. 

No directory in the path can contain a space in its name. 

When specifying the name of the PSM file either when prompted (whilst in interactive mode) or 
on the command line, the path will be used to define the location at which the FMT file will 
be written and where the assembler will look for any 'ROM_form' templates. It will also define 
to the location at which the LOG, HEX, V and VHD files will be written unless an alternative 
name has been specified.

When an alternative name for the output files is specified on the command line then this can 
also specify a path to the desired location. Providing this is a valid path then the LOG, HEX, 
V and VHD files will be written to this location using the alternative name. 


Note that if an alternative name is defined but without a path then the files will be written 
to the directory from which the assembler is invoked even if the KCPSM3.exe is located somewhere 
else.

Examples....

KCPSM3 c:\Ken\my_prog.psm

   KCPSM3 will attempt to read the following files from c:\Ken\
     my_prog.psm
     ROM_form.v
     ROM_form.vhd
   KCPSM3 will write the following files to c:\Ken\
     my_prog.fmt
     my_prog.log
     my_prog.hex
     my_prog.v
     my_prog.vhd

KCPSM3 c:\Ken\my_prog c:\Nick\KCPSM3_rom

   KCPSM3 will attempt to read the following files from c:\Ken\
     my_prog.psm
     ROM_form.v
     ROM_form.vhd
   KCPSM3 will write the following file to c:\Ken\
     my_prog.fmt
   KCPSM3 will write the following files to c:\Nick\
     KCPSM3_rom.log
     KCPSM3_rom.hex
     KCPSM3_rom.v
     KCPSM3_rom.vhd



Error Codes
-----------

When KCPSM3 completes it will set the ERRORLEVEL system variable based on the success of failure 
of the assembly process. 

ERRORLEVEL=0 when assembly completes successfully.
ERRORLEVEL=1 when there was an error present at the point at which the assembler was quit.

A batch file can test for the error condition to take an appropriate action....

KCPSM3 my_program.psm
IF ERRORLEVEL 1 GOTO failed
REM Assembly was successful
GOTO end
:failed
REM Oh dear, that didn't work did it?
:end


------------------------------------------------------------------------------------------------
Known Issues and Workarounds
------------------------------------------------------------------------------------------------

KCPSM3 window takes a long time to appear on your screen.
---------------------------------------------------------

In most cases the window should open almost immediately so if it takes more than a few seconds
especially if your PC is not busy processing other applications then this is worth an
investigation and experiment. Have a look to see what your default printer is set to. 

    Start -> Printers and Faxes 

The default printer will have a small tick next to it. Ideally you should assign a local printer
and make sure that the selected printer is available to Windows applications (a printer 
doesn't actually need to be turned on but should be capable of printing from applications
e.g., a USB connected printer will normally automatically turn on when sent a document).

    Right click on the desired printer and select 'Set as Default Printer'.
    The small tick mark will move.

Run KCPSM3 again and see if that has made it open faster.
If it is not convenient to change the default printer then the fastest way to use KCPSM3 is 
in interactive mode. Once open, enter the name of your PSM file and let it assemble. Then 
just keep KCPM6 open continuously and use the 'R' and 'N' options to control assembly.

Although rare, this issue typically occurs when a network printer has been assigned as the 
default but Windows applications cannot find it. This can also be associated with the print 
driver being incorrect or requiring an update. If the network and/or printer driver can not 
be resolved that ideally you can assign a local printer as the default. If you don't have a 
local printer then a useful technique is to install a PDF writer and make that your default 
printer.




------------------------------------------------------------------------------------------------
Known Limitations
------------------------------------------------------------------------------------------------

Does not generate a MEM file.


------------------------------------------------------------------------------------------------
End of file 'KCPSM3_assembler_readme.txt'
------------------------------------------------------------------------------------------------

