--------------------------------------------------------------------------------
--
-- This VHDL file was generated by EASE/HDL 8.0 Revision 2 from HDL Works B.V.
--
-- Ease library  : design_ip_dcf_77
-- HDL library   : design_ip_dcf_77
-- Host name     : INF13-BENSALAHM
-- User name     : mohammed.bensalah
-- Time stamp    : Sun Jun 07 21:36:46 2015
--
-- Designed by   : 
-- Company       : 
-- Project info  : 
--
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
-- Object        : Entity design_ip_dcf_77.decode_dcf77
-- Last modified : Sat Jun 06 14:57:17 2015.
--------------------------------------------------------------------------------



library ieee;
use ieee.std_logic_1164.all;
use ieee.numeric_std.all;

entity decode_dcf77 is
  port (
    bit_count  : out    std_logic_vector(5 downto 0);
    clk        : in     std_logic;
    dcf_77_s   : in     std_logic;
    freq       : in     std_logic;
    getNothing : out    std_logic;
    reset_n    : in     std_logic;
    start      : out    std_logic;
    state_bit  : out    std_logic;
    stop       : out    std_logic);
end entity decode_dcf77;

--------------------------------------------------------------------------------
-- Object        : Architecture design_ip_dcf_77.decode_dcf77.structure
-- Last modified : Sat Jun 06 14:57:17 2015.
--------------------------------------------------------------------------------

architecture structure of decode_dcf77 is

  signal high_ms_count      : std_logic_vector(7 downto 0);
  signal sec_overflow       : std_logic;
  signal rising_edge_dcf_77 : std_logic;

  component decode_block
    port (
      bit_count          : out    std_logic_vector(5 downto 0);
      clk                : in     std_logic;
      dcf_77_s           : in     std_logic;
      freq               : in     std_logic;
      getNothing         : out    std_logic;
      high_ms_count      : in     std_logic_vector(7 downto 0);
      reset_n            : in     std_logic;
      rising_edge_dcf_77 : in     std_logic;
      sec_overflow       : in     std_logic;
      start              : out    std_logic;
      state_bit          : out    std_logic;
      stop               : out    std_logic);
  end component decode_block;

  component coutner_ms
    port (
      clk                : in     std_logic;
      dcf_77_s           : in     std_logic;
      freq               : in     std_logic;
      high_ms_count      : out    std_logic_vector(7 downto 0);
      reset_n            : in     std_logic;
      rising_edge_dcf_77 : in     std_logic);
  end component coutner_ms;

  component rising_edge_dectection
    port (
      clk                : in     std_logic;
      dcf_77_s           : in     std_logic;
      reset_n            : in     std_logic;
      rising_edge_dcf_77 : out    std_logic);
  end component rising_edge_dectection;

  component counter_ms_oveflow
    port (
      clk                : in     std_logic;
      freq               : in     std_logic;
      reset_n            : in     std_logic;
      rising_edge_dcf_77 : in     std_logic;
      sec_overflow       : out    std_logic);
  end component counter_ms_oveflow;

begin

  u2: decode_block
    port map(
      bit_count          => bit_count,
      clk                => clk,
      dcf_77_s           => dcf_77_s,
      freq               => freq,
      getNothing         => getNothing,
      high_ms_count      => high_ms_count,
      reset_n            => reset_n,
      rising_edge_dcf_77 => rising_edge_dcf_77,
      sec_overflow       => sec_overflow,
      start              => start,
      state_bit          => state_bit,
      stop               => stop);

  u0: coutner_ms
    port map(
      clk                => clk,
      dcf_77_s           => dcf_77_s,
      freq               => freq,
      high_ms_count      => high_ms_count,
      reset_n            => reset_n,
      rising_edge_dcf_77 => rising_edge_dcf_77);

  u1: rising_edge_dectection
    port map(
      clk                => clk,
      dcf_77_s           => dcf_77_s,
      reset_n            => reset_n,
      rising_edge_dcf_77 => rising_edge_dcf_77);

  u3: counter_ms_oveflow
    port map(
      clk                => clk,
      freq               => freq,
      reset_n            => reset_n,
      rising_edge_dcf_77 => rising_edge_dcf_77,
      sec_overflow       => sec_overflow);
end architecture structure ; -- of decode_dcf77

