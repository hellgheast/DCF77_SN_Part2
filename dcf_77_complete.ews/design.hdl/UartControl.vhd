--------------------------------------------------------------------------------
--
-- This VHDL file was generated by EASE/HDL 8.0 Revision 2 from HDL Works B.V.
--
-- Ease library  : design_dcf_complete
-- HDL library   : design_dcf_complete
-- Host name     : INF13-MEIERV
-- User name     : vincent.meier
-- Time stamp    : Mon Jun 08 15:29:19 2015
--
-- Designed by   : 
-- Company       : 
-- Project info  : 
--
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
-- Object        : Entity design_dcf_complete.UartControl
-- Last modified : Mon Jun 08 15:28:48 2015.
--------------------------------------------------------------------------------



library ieee;
use ieee.std_logic_1164.all;
use ieee.numeric_std.all;

entity UartControl is
  port (
    buffer_full_c : out    std_logic;
    clk           : in     std_logic;
    data_in       : in     std_logic_vector(7 downto 0);
    reset_n       : in     std_logic;
    serial_out    : out    std_logic;
    uart_cs       : in     std_logic;
    write         : in     std_logic);
end entity UartControl;

--------------------------------------------------------------------------------
-- Object        : Architecture design_dcf_complete.UartControl.structure
-- Last modified : Mon Jun 08 15:28:48 2015.
--------------------------------------------------------------------------------

architecture structure of UartControl is

  signal data_out     : std_logic_vector(7 downto 0);
  signal reset_buffer : std_logic;
  signal en_16_x_baud : std_logic;
  signal write_buffer : std_logic;

  component UartManage
    port (
      clk          : in     std_logic;
      data_in      : in     std_logic_vector(7 downto 0);
      data_out     : out    std_logic_vector(7 downto 0);
      reset_buffer : out    std_logic;
      reset_n      : in     std_logic;
      uart_cs      : in     std_logic;
      write        : in     std_logic;
      write_buffer : out    std_logic);
  end component UartManage;

  component BaudRateCounter
    port (
      clk          : in     std_logic;
      en_16_x_baud : out    std_logic;
      reset_n      : in     std_logic;
      start_tr     : in     std_logic;
      uart_cs      : in     std_logic);
  end component BaudRateCounter;

  component uart_tx
    port (
      data_in          : in     std_logic_vector(7 downto 0);
      write_buffer     : in     std_logic;
      reset_buffer     : in     std_logic;
      en_16_x_baud     : in     std_logic;
      serial_out       : out    std_logic;
      buffer_full      : out    std_logic;
      buffer_half_full : out    std_logic;
      clk              : in     std_logic);
  end component uart_tx;

begin

  u1: UartManage
    port map(
      clk          => clk,
      data_in      => data_in,
      data_out     => data_out,
      reset_buffer => reset_buffer,
      reset_n      => reset_n,
      uart_cs      => uart_cs,
      write        => write,
      write_buffer => write_buffer);

  u2: BaudRateCounter
    port map(
      clk          => clk,
      en_16_x_baud => en_16_x_baud,
      reset_n      => reset_n,
      start_tr     => write_buffer,
      uart_cs      => uart_cs);

  u0: uart_tx
    port map(
      data_in          => data_out,
      write_buffer     => write_buffer,
      reset_buffer     => reset_buffer,
      en_16_x_baud     => en_16_x_baud,
      serial_out       => serial_out,
      buffer_full      => buffer_full_c,
      buffer_half_full => open,
      clk              => clk);
end architecture structure ; -- of UartControl

